<?php

namespace Proxies\__CG__\CT\ApplicationBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Community extends \CT\ApplicationBundle\Entity\Community implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'CT\\ApplicationBundle\\Entity\\Community' . "\0" . 'id', '' . "\0" . 'CT\\ApplicationBundle\\Entity\\Community' . "\0" . 'admin', '' . "\0" . 'CT\\ApplicationBundle\\Entity\\Community' . "\0" . 'posts', '' . "\0" . 'CT\\ApplicationBundle\\Entity\\Community' . "\0" . 'image', '' . "\0" . 'CT\\ApplicationBundle\\Entity\\Community' . "\0" . 'subscribers', '' . "\0" . 'CT\\ApplicationBundle\\Entity\\Community' . "\0" . 'private', '' . "\0" . 'CT\\ApplicationBundle\\Entity\\Community' . "\0" . 'title', '' . "\0" . 'CT\\ApplicationBundle\\Entity\\Community' . "\0" . 'invitUser');
        }

        return array('__isInitialized__', '' . "\0" . 'CT\\ApplicationBundle\\Entity\\Community' . "\0" . 'id', '' . "\0" . 'CT\\ApplicationBundle\\Entity\\Community' . "\0" . 'admin', '' . "\0" . 'CT\\ApplicationBundle\\Entity\\Community' . "\0" . 'posts', '' . "\0" . 'CT\\ApplicationBundle\\Entity\\Community' . "\0" . 'image', '' . "\0" . 'CT\\ApplicationBundle\\Entity\\Community' . "\0" . 'subscribers', '' . "\0" . 'CT\\ApplicationBundle\\Entity\\Community' . "\0" . 'private', '' . "\0" . 'CT\\ApplicationBundle\\Entity\\Community' . "\0" . 'title', '' . "\0" . 'CT\\ApplicationBundle\\Entity\\Community' . "\0" . 'invitUser');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Community $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdminId($adminId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdminId', array($adminId));

        return parent::setAdminId($adminId);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdminId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdminId', array());

        return parent::getAdminId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrivate($private)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrivate', array($private));

        return parent::setPrivate($private);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrivate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrivate', array());

        return parent::getPrivate();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdmin(\CT\UserBundle\Entity\User $admin = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdmin', array($admin));

        return parent::setAdmin($admin);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdmin', array());

        return parent::getAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function addPost(\CT\ApplicationBundle\Entity\Post $posts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPost', array($posts));

        return parent::addPost($posts);
    }

    /**
     * {@inheritDoc}
     */
    public function removePost(\CT\ApplicationBundle\Entity\Post $posts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePost', array($posts));

        return parent::removePost($posts);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosts', array());

        return parent::getPosts();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage(\CT\UserBundle\Entity\Image $image = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', array($image));

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', array());

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function addSubscriber(\CT\UserBundle\Entity\User $subscribers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSubscriber', array($subscribers));

        return parent::addSubscriber($subscribers);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSubscriber(\CT\UserBundle\Entity\User $subscribers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSubscriber', array($subscribers));

        return parent::removeSubscriber($subscribers);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscribers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscribers', array());

        return parent::getSubscribers();
    }

    /**
     * {@inheritDoc}
     */
    public function setInvitUser(\CT\UserBundle\Entity\User $invitUser = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInvitUser', array($invitUser));

        return parent::setInvitUser($invitUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getInvitUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInvitUser', array());

        return parent::getInvitUser();
    }

    /**
     * {@inheritDoc}
     */
    public function addInvitUser(\CT\UserBundle\Entity\User $invitUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addInvitUser', array($invitUser));

        return parent::addInvitUser($invitUser);
    }

    /**
     * {@inheritDoc}
     */
    public function removeInvitUser(\CT\UserBundle\Entity\User $invitUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeInvitUser', array($invitUser));

        return parent::removeInvitUser($invitUser);
    }

}
